@model IEnumerable<Kooboo.CMS.Content.Versioning.VersionInfo>
@{
    ViewBag.Title = "Text cotnent versions";
    Layout = "~/Views/Shared/Blank.cshtml";
}
@section Panel{
    <ul class="panel">

        <li><a href="@Url.Action("Diff", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl))" data-show-on-check="Two" data-command-type="Redirect">
            @Html.IconImage("preview") @("Compare".Localize())</a></li>

        <li><a href="@Url.Action("RevertTo", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.RequestContext.GetRequestValue("return")))" data-show-on-check="Single" data-command-type="AjaxPost" data-confirm="@("Are you sure you want to revert to this version?".Localize())">
            @Html.IconImage("reset") @("Revert".Localize())</a></li>

        <li>
            <a href="@ViewContext.RequestContext.GetRequestValue("return")">
                @Html.IconImage("cancel") @("Back".Localize())</a>
        </li>
    </ul>
}

<div class="topbar clearfix">
    <h1 class="title">
        @ViewBag.Title</h1>
</div>
@Html.GridForModel2()
<script type="text/javascript">
    $(function () {

        var tip = '@("please select two versions!".Localize())';

        var title = "Diff";

        $("input:checkbox:eq(0)").hide();

        var diffButton = $("a.diff.button").click(function () {

            var current = $(this);

            var selected = $("input:checkbox[checked]");

            if (selected.length < 2) {

                alert(tip);

                return false;

            } else {

                var href = current.attr("href");


                var request = $.request(href);

                request.queryString["v1"] = selected.first().val();

                request.queryString["v2"] = selected.last().val();

                //alert(request.getUrl());
                $.pop({

                    url: request.getUrl(),

                    autoOpen: true,

                    width: 900,

                    height: 600,

                    frameHeight: "98%",

                    popupOnTop: true,

                    openOnclick: false,

                    onload: function (handle, pop, config) {
                        pop.iframe.contents().find('div.diffPane').height(500);
                    },

                    onclose: function (handle, pop, config) {

                        pop.destory();

                    },

                    title: title

                });

            }
            return false;

        });
        $("input:checkbox").change(function () {

            var selectedCount = $("input:checkbox[checked]").length;

            if (selectedCount > 2) {

                $(this).attr("checked", false);

                return false;

            }

        });

        $('a.o-icon.revert').click(function (e) {
            e.preventDefault();
            var handle = $(this);
            kooboo.confirm('@("Are you sure you want to revert to this version?".Localize())', function (r) {
                if (r) {
                    $.post(handle.attr('href'), function (response) {
                        if (response.Success) {
                            top.kooboo.data('parent-page-reload', true);
                        }
                        kooboo.cms.ui.messageBox().showResponse(response);
                    });
                }
            });
        });
    });
</script>
@section ScriptCSS{
}
