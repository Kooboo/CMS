@model Kooboo.CMS.Modules.Publishing.Web.Areas.Publishing.Models.LocalPagePublishingModel
@{
    ViewBag.Title = "Publish local pages".Localize();
    Layout = "~/Views/Shared/Blank.cshtml";
}
@section Panel{
    <ul class="panel">
        <li>
            <a data-ajaxform="">
                @Html.IconImage("save") @("Save".Localize())</a>
        </li>
        <li>
            <a href="@ViewContext.RequestContext.GetRequestValue("return")">
                @Html.IconImage("cancel") @("Back".Localize())</a>
        </li>
    </ul>
}
<div class="common-form">
    <h1 class="title">@ViewBag.Title</h1>
    <form action="" method="post" id="publish_LocalPage_Form">
        <table id="local_publish_page">
            <tbody>
                @Html.EditorFor(m => m.Pages, new { HtmlAttributes = new { @class = "medium" } })
                @Html.EditorFor(m => m.UtcTimeToPublish, new { HtmlAttributes = new { @class = "medium bothEmpty" } })
                @Html.EditorFor(m => m.UtcTimeToUnpublish, new { HtmlAttributes = new { @class = "medium bothEmpty" } })
            </tbody>
        </table>
    </form>
</div>
<script type="text/javascript">
    $(function () {
        var $publishTime = $("#UtcTimeToPublish"), $unpublishTime = $("#UtcTimeToUnpublish"),
            $distanceText = $("#UtcTimeToUnpublish_distance");

        $("#publish_LocalPage_Form").on("submit", function () {
            var pubDateText = $publishTime.val(), unpubDateText = $unpublishTime.val();
            if (!(pubDateText || unpubDateText)) {
                window.info.show("@("PublishTime and UnpublishTime Can not be both empty.".Localize())", false);
                return false;
            }
            return true;
        });
        $publishTime.on("datetimepicker.blur", function () {
            setTip(this.value, $unpublishTime.val());
        });
        $unpublishTime.unbind("datetimepicker.blur").on("datetimepicker.blur", function () {
            setTip($publishTime.val(), this.value);
        });

        function setTip(pubDateText, unpubDateText) {
            var dayOfMillSeconds = 1000 * 60 * 60 * 24,
                hoursOfMillSeconds = 1000 * 60 * 60,
                minutesOfMillSeconds = 1000 * 60,
                secondsOfMillSeconds = 1000,
                displayText = "";
            if (unpubDateText) {
                var pubDate = new Date(), unpubDate = new Date(unpubDateText);
                if (pubDateText) {
                    pubDate = new Date(pubDateText);
                }
                var millSeconds = unpubDate.getTime() - pubDate.getTime();
                var distanceDay = 0, distanceHours = 0, distantceMinutes = 0, distanceSeconds = 0;
                if (millSeconds > 0) {
                    if (millSeconds >= dayOfMillSeconds) {
                        distanceDay = parseInt(millSeconds / dayOfMillSeconds);
                        millSeconds -= dayOfMillSeconds * distanceDay;
                    }
                    if (millSeconds >= hoursOfMillSeconds) {
                        distanceHours = parseInt(millSeconds / hoursOfMillSeconds);
                        millSeconds -= hoursOfMillSeconds * distanceHours;
                    }
                    if (millSeconds >= minutesOfMillSeconds) {
                        distantceMinutes = Math.floor(millSeconds / minutesOfMillSeconds);
                        millSeconds -= minutesOfMillSeconds * distantceMinutes;
                    }
                    if (millSeconds >= secondsOfMillSeconds) {
                        distanceSeconds = Math.floor(millSeconds / secondsOfMillSeconds);
                    }
                }
                if (distanceDay > 0) {
                    displayText += distanceDay + " @("days".Localize()) ";
                }
                if (distanceHours > 0) {
                    displayText += distanceHours + " @("hours".Localize()) ";
                }
                if (distantceMinutes > 0) {
                    displayText += distantceMinutes + " @("minutes".Localize()) ";
                }
                if (distanceSeconds > 0) {
                    displayText += distanceSeconds + " @("seconds".Localize()) ";
                }
                if (!displayText) {
                    displayText = distanceSeconds + " @("seconds".Localize())";
                }
                displayText = "@("Online for".Localize()) : " + displayText;
            }
            $distanceText.text(displayText);
        }
    });
</script>
