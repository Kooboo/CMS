@model System.Collections.Generic.IEnumerable<Kooboo.CMS.Sites.Models.Page>
@{
    ViewBag.Title = "Pages".Localize();
    Layout = "~/Views/Shared/Site.cshtml";
    var sortable = string.IsNullOrEmpty(ViewContext.RequestContext.GetRequestValue("sortField"));

    var parentPage = (Kooboo.CMS.Sites.Models.Page)ViewBag.Page;
}
@section Panel{
    <ul class="panel">

        <li class="j_DropDown">
            <a>
                @Html.IconImage("add")
                @("Create New".Localize())
                @Html.IconImage("arrow small white-down")
            </a>
            @Html.Partial("_LayoutList", ViewData["LayoutList"])
        </li>
        <li>
            <a href="@Url.Action("Import", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl).Merge("title", "Import pages"))">
                @Html.IconImage("import") @("Import".Localize())
            </a>
        </li>

        <li><a href="@Url.Action("Delete", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl))" data-show-on-check="Any" data-show-on-selector=".localized" data-command-type="AjaxPost" data-confirm="@("Are you sure you want to delete these items?".Localize())">
            @Html.IconImage("delete") @("Delete".Localize())</a></li>

        <li><a href="@Url.Action("Localize", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl))" data-show-on-check="Any" data-show-on-selector=".unlocalized" data-command-type="AjaxPost">
            @Html.IconImage("localize") @("Localize".Localize())</a></li>
        <li class="j_DropDown" data-show-on-check="Any" data-show-on-selector=".localized">
            <a>
                @("More...".Localize())
                @Html.IconImage("arrow small white-down")
            </a>
            <ul class="j_DropDownContent hide">
                <li>
                    <a href="@Url.Action("Export", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl))" data-show-on-check="Any"  data-show-on-selector=".localized" data-command-type="Download">
                        @("Export".Localize())
                    </a>
                </li>
                <li><a href="@Url.Action("BatchPublish", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl))" data-show-on-check="Any" data-show-on-selector=".unpublished" data-command-type="AjaxPost" data-confirm="@("Are you sure you want to publish these items?".Localize())">@("Publish".Localize())</a></li>
                <li><a href="@Url.Action("BatchUnpublish", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl))" data-show-on-check="Any" data-show-on-selector=".published" data-command-type="AjaxPost" data-confirm="@("Are you sure you want to unpublish these items?".Localize())">@("Unpublish".Localize())</a></li>

                <li><a href="@Url.Action("Copy", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl))" data-show-on-check="Single" data-show-on-selector=".localized" data-command-type="Redirect">@("Copy".Localize())</a></li>
                <li><a href="@Url.Action("Move", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl))" data-show-on-check="Single" data-show-on-selector=".localized"  data-command-type="Redirect">@("Move".Localize())</a></li>
                <li><a href="@Url.Action("Versions", ViewContext.RequestContext.AllRouteValues().Merge("return", ViewContext.HttpContext.Request.RawUrl).Merge("title", "Show page versions"))" data-show-on-check="Single" data-show-on-selector=".localized" data-command-type="Redirect">@("Versions".Localize())</a></li>
            </ul>
        </li>
    </ul>
}
<div class="topbar clearfix">
    <h1 class="title">
        @if (parentPage != null)
        {
            @parentPage.LinkText
        }
        else
        {
            @ViewBag.Title
        }
    </h1>
    @if (parentPage != null)
    {
        var path = parentPage.PageNamePaths.ToArray();
        <div class="breadcrumb">
            <a href="@Url.Action("Index", ViewContext.RequestContext.AllRouteValues().Merge("parentPage", ""))">@ViewBag.Title</a>
            @for (var i = 0; i < path.Length; i++)
            {
                @Html.IconImage("arrow gray-right")
                var current = new Kooboo.CMS.Sites.Models.Page(Site.Current, PageHelper.CombineFullName(path.Take(i + 1))).LastVersion(Site.Current).AsActual();
                if (i == path.Length - 1)
                {                     
                <span>@current.LinkText
                    @if (parentPage.IsLocalized(Site.Current))
                    {                        
                        @("(")<a href="@Url.Action("Edit", ViewContext.RequestContext.AllRouteValues().Merge("UUID", parentPage.FullName).Merge("return", Request.RawUrl))">@("Edit".Localize())</a>@(")")                        
                    }</span>
                }
                else
                {               
                <a href="@Url.Action("Index", ViewContext.RequestContext.AllRouteValues().Merge("parentPage", @current.FullName))">@current.LinkText</a>                
                }
            }
        </div>    
    }
    @Html.Partial("_Search")
</div>
@Html.GridForModel2()
<script>
    @if (sortable)
    {
        <text>
    $(function () {
        var fixHelper = function (e, ui) {
            ui.children().each(function () {
                $(this).width($(this).width());
            });
            return ui;
        };
        $("div.common-table table tbody tr").css("cursor", "move");
        $("div.common-table table tbody").sortable({
            helper: fixHelper,
            handle: 'td.draggable .drag',
            update: function (event, ui) {
                var pageNameOrders = {};
                _.each($('[data-pagename]').toArray(), function (item, index) {
                    var $item = $(item);
                    var p = 'pageNames[' + index + ']';
                    pageNameOrders[p] = $item.data('pagename');
                });

                $.ajax({
                    url: '@Html.Raw(this.Url.Action("SortPages", ViewContext.RequestContext.AllRouteValues()))',
                    data: pageNameOrders,
                    type: 'post',
                    success: function (response) {
                        parse_JsonResultData(response);
                    },
                    error: function () {
                    }
                });
            }
        }).disableSelection();
    });
    </text>
    }
    else
    {
        <text>
    $('img.drag').remove();
    </text>
    }
</script>
